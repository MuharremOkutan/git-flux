#!/bin/sh

# see SPEC.md and README.md for more info

if [ "$DEBUG" = "yes" ]; then
	set -x
fi

usage() {
    echo "usage: git puppet <subcommand> [options]"
    echo
    echo "Available subcommands:"
    echo "   init     Initialize a new git repo with support for git-puppet branching model."
    echo "   env      Manage your environment branches."
    echo "   feature  Manage your feature branches."
    echo "   publish  Publish (push) a feature or environment branch."
    echo
    echo "Try 'git puppet <subcommand> help' for details."
}

main() {
    git_puppet_dir=$(dirname $0)
    
    # load common helpers
    . "$git_puppet_dir/gitpuppet-common"
    
    command="$1"; shift

    if [ ! -e "$git_puppet_dir/git-puppet-$command" ]; then
		usage
		exit 1
	fi
    
    # load command and run it
    . "$git_puppet_dir/git-puppet-$command"
    
    # special case for git-puppet-publish: always call cmd_default
    # i am a little embarrassed by this ugliness :(
    
    case $command in
        "publish")
            cmd_default $@
            ;;
        *)
            subcommand="default"
            if [ "$1" != "" ] && { ! echo "$1" | grep -q "^-"; } then
                subcommand="$1"; shift
            fi
            if ! type "cmd_$subcommand" >/dev/null 2>&1; then
                warn "Unknown subcommand: '$subcommand'"
                usage
                exit 1
            fi
            cmd_$subcommand "$@"
            ;;
    esac
}

main "$@"